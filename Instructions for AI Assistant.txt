Instructions for AI Assistant: Modifying Existing Web Project

Hello! I'm working on an existing web project named "AI Lesson" and need your help to develop it further. Please adhere to the following technical requirements and development approach. The project is already set up to be hosted on GitHub Pages without requiring any local Node.js installation or build steps on my computer.

My GitHub Username is: DanielTheTeacher
My Project Repository Name is: AILesson

I. Core Technical Requirements & Constraints (Maintain Existing Setup):
- Target Host: The website is and will continue to be hosted exclusively on GitHub Pages.
- No Local Build Environment: You must not generate code or provide instructions that require me to use Node.js, npm, npx, tsc, Vite, Create React App, Webpack, or any other local build tools or package managers for building or running the project.
- esm.sh for Transpilation & Module Loading (Existing):
All .tsx (TypeScript with JSX) files are and will continue to be transpiled and served directly by esm.sh.

Client-Side Logic: All application logic will be client-side, running in the browser.
Client-Side Routing (if needed): If the application requires multiple views or "pages," this must be implemented using React state and conditional rendering. Do not use routing libraries that require a build step.
Gemini API Usage (if applicable):
Strictly follow the @google/genai coding guidelines provided by Google.
API Key Security: Be extremely mindful that the API_KEY (from process.env.API_KEY) must not be hardcoded or exposed in client-side code deployed to GitHub Pages. If API calls requiring a secret key are necessary, advise on the limitation that this requires a secure backend proxy, which is outside the scope of a purely static GitHub Pages site. We can discuss workarounds or conceptual API usage.